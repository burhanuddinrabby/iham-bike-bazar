{"ast":null,"code":"var _jsxFileName = \"G:\\\\Assignment-10\\\\src\\\\components\\\\Login\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useSignInWithEmailAndPassword, useSignInWithGoogle } from 'react-firebase-hooks/auth';\nimport auth from '../../../firebase.init';\nimport Loading from '../Loading/Loading';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  var _location$state, _location$state$from;\n\n  const [signInWithGoogle, userByGoogle, loadingViaGoogle, errorByGoogle] = useSignInWithGoogle(auth);\n  const [signInWithEmailAndPassword, user, loading, error] = useSignInWithEmailAndPassword(auth);\n  const [checked, setChecked] = useState(false);\n  const location = useLocation();\n  const from = (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/';\n  let errorMessage;\n  const navigate = useNavigate();\n  errorByGoogle && (errorMessage = errorByGoogle.message);\n\n  if (error) {\n    if (error.message === 'Firebase: Error (auth/wrong-password).') {\n      errorMessage = 'Wrong Password Please Try Again';\n    } else if (error.message === 'Firebase: Error (auth/user-not-found).') {\n      errorMessage = 'User Not Found. Maybe invalid email or password';\n    } else {\n      errorMessage = error.message;\n    }\n  } //navigating user to the previous page\n\n\n  user && navigate(from, {\n    replace: true\n  });\n  userByGoogle && navigate(from, {\n    replace: true\n  }); //submitting and logging in with email and password\n\n  const submitValue = e => {\n    e.preventDefault();\n    const form = e.target;\n    const email = form.email.value;\n    const password = form.password.value;\n    signInWithEmailAndPassword(email, password);\n  }; //logging in with google\n\n\n  const handleSignInWithGoogle = () => {\n    signInWithGoogle();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Please\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary\",\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitValue,\n        className: \"w-75  mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            onClick: () => setChecked(!checked),\n            type: \"checkbox\",\n            label: \"I agree terms and condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [errorMessage, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"d-block mx-auto px-5\",\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: !checked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 27\n        }, this), \"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"or-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), (loading || loadingViaGoogle) && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 51\n      }, this), (loading || loadingViaGoogle) && toast('Loading...'), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-auto d-block px-5\",\n        onClick: handleSignInWithGoogle,\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"wf2MNkVCOdlhNSlCTOXCvAOZ1tk=\", false, function () {\n  return [useSignInWithGoogle, useSignInWithEmailAndPassword, useLocation, useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["G:/Assignment-10/src/components/Login/Login/Login.js"],"names":["React","useState","Button","Container","Form","Link","useLocation","useNavigate","useSignInWithEmailAndPassword","useSignInWithGoogle","auth","Loading","ToastContainer","toast","Login","signInWithGoogle","userByGoogle","loadingViaGoogle","errorByGoogle","signInWithEmailAndPassword","user","loading","error","checked","setChecked","location","from","state","pathname","errorMessage","navigate","message","replace","submitValue","e","preventDefault","form","target","email","value","password","handleSignInWithGoogle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,6BAAT,EAAwCC,mBAAxC,QAAmE,2BAAnE;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAChB,QAAM,CAACC,gBAAD,EAAmBC,YAAnB,EAAiCC,gBAAjC,EAAmDC,aAAnD,IAAoET,mBAAmB,CAACC,IAAD,CAA7F;AACA,QAAM,CACFS,0BADE,EAEFC,IAFE,EAGFC,OAHE,EAIFC,KAJE,IAKFd,6BAA6B,CAACE,IAAD,CALjC;AAMA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMwB,QAAQ,GAAGnB,WAAW,EAA5B;AACA,QAAMoB,IAAI,GAAG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEE,KAAV,4FAAiBD,IAAjB,8EAAuBE,QAAvB,KAAmC,GAAhD;AACA,MAAIC,YAAJ;AACA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACAW,EAAAA,aAAa,KAAKW,YAAY,GAAGX,aAAa,CAACa,OAAlC,CAAb;;AACA,MAAIT,KAAJ,EAAW;AACP,QAAIA,KAAK,CAACS,OAAN,KAAkB,wCAAtB,EAAgE;AAC5DF,MAAAA,YAAY,GAAG,iCAAf;AACH,KAFD,MAGK,IAAIP,KAAK,CAACS,OAAN,KAAkB,wCAAtB,EAAgE;AACjEF,MAAAA,YAAY,GAAG,iDAAf;AACH,KAFI,MAGA;AACDA,MAAAA,YAAY,GAAGP,KAAK,CAACS,OAArB;AACH;AACJ,GAxBe,CAyBhB;;;AACAX,EAAAA,IAAI,IAAIU,QAAQ,CAACJ,IAAD,EAAO;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAP,CAAhB;AACAhB,EAAAA,YAAY,IAAIc,QAAQ,CAACJ,IAAD,EAAO;AAAEM,IAAAA,OAAO,EAAE;AAAX,GAAP,CAAxB,CA3BgB,CA4BhB;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGF,CAAC,CAACG,MAAf;AACA,UAAMC,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAWC,KAAzB;AACA,UAAMC,QAAQ,GAAGJ,IAAI,CAACI,QAAL,CAAcD,KAA/B;AACApB,IAAAA,0BAA0B,CAACmB,KAAD,EAAQE,QAAR,CAA1B;AACH,GAND,CA7BgB,CAoChB;;;AACA,QAAMC,sBAAsB,GAAG,MAAM;AACjC1B,IAAAA,gBAAgB;AACnB,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA,0CACI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEkB,WAAhB;AAA6B,QAAA,SAAS,EAAC,eAAvC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,gBAAvC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,OAAnB;AAA2B,YAAA,IAAI,EAAC,OAAhC;AAAwC,YAAA,WAAW,EAAC,aAApD;AAAkE,YAAA,QAAQ;AAA1E;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,mBAAvC;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,UAAnB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,WAAW,EAAC,UAA1D;AAAqE,YAAA,QAAQ;AAA7E;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,mBAAvC;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,OAAO,EAAE,MAAMT,UAAU,CAAC,CAACD,OAAF,CAArC;AAAiD,YAAA,IAAI,EAAC,UAAtD;AAAiE,YAAA,KAAK,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAgBI;AAAA;AAAA;AAAA;AAAA,gBAhBJ,EAiBKD,KAAK,iBAAI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,qBAA4BO,YAA5B,oBAA0C;AAAA;AAAA;AAAA;AAAA,kBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBd,eAkBI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAC,SAAjD;AAA2D,UAAA,IAAI,EAAC,QAAhE;AAAyE,UAAA,QAAQ,EAAE,CAACN,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAqBI;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAqBU;AAAA;AAAA;AAAA;AAAA,gBArBV,0CAsB2B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtB3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyBI;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,EA8BK,CAACF,OAAO,IAAIJ,gBAAZ,kBAAiC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA9BtC,EA+BK,CAACI,OAAO,IAAIJ,gBAAZ,KAAiCJ,KAAK,CAAC,YAAD,CA/B3C,eAgCI;AAAQ,QAAA,SAAS,EAAC,sCAAlB;AAAyD,QAAA,OAAO,EAAE4B,sBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAwCI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAxCJ,eAyCI;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CArFD;;GAAM3B,K;UACwEL,mB,EAMtED,6B,EAEaF,W,EAGAC,W;;;KAZfO,K;AAuFN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useSignInWithEmailAndPassword, useSignInWithGoogle } from 'react-firebase-hooks/auth';\r\nimport auth from '../../../firebase.init';\r\nimport Loading from '../Loading/Loading';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Login.css'\r\n\r\nconst Login = () => {\r\n    const [signInWithGoogle, userByGoogle, loadingViaGoogle, errorByGoogle] = useSignInWithGoogle(auth);\r\n    const [\r\n        signInWithEmailAndPassword,\r\n        user,\r\n        loading,\r\n        error,\r\n    ] = useSignInWithEmailAndPassword(auth);\r\n    const [checked, setChecked] = useState(false);\r\n    const location = useLocation();\r\n    const from = location?.state?.from?.pathname || '/';\r\n    let errorMessage;\r\n    const navigate = useNavigate();\r\n    errorByGoogle && (errorMessage = errorByGoogle.message);\r\n    if (error) {\r\n        if (error.message === 'Firebase: Error (auth/wrong-password).') {\r\n            errorMessage = 'Wrong Password Please Try Again';\r\n        }\r\n        else if (error.message === 'Firebase: Error (auth/user-not-found).') {\r\n            errorMessage = 'User Not Found. Maybe invalid email or password';\r\n        }\r\n        else {\r\n            errorMessage = error.message;\r\n        }\r\n    }\r\n    //navigating user to the previous page\r\n    user && navigate(from, { replace: true });\r\n    userByGoogle && navigate(from, { replace: true });\r\n    //submitting and logging in with email and password\r\n    const submitValue = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const email = form.email.value;\r\n        const password = form.password.value;\r\n        signInWithEmailAndPassword(email, password);\r\n    }\r\n    //logging in with google\r\n    const handleSignInWithGoogle = () => {\r\n        signInWithGoogle();\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='text-center my-5'>\r\n                <h1>Please\r\n                    <span className='text-primary'> Login</span>\r\n                </h1>\r\n            </div>\r\n            <Container className='mt-5'>\r\n                <Form onSubmit={submitValue} className='w-75  mx-auto'>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name='email' type=\"email\" placeholder=\"Enter email\" required />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name='password' type=\"password\" placeholder=\"Password\" required />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                        <Form.Check onClick={() => setChecked(!checked)} type=\"checkbox\" label=\"I agree terms and condition\" />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {error && <p className='text-danger'>{errorMessage} <br /></p>}\r\n                    <Button className='d-block mx-auto px-5' variant=\"primary\" type=\"submit\" disabled={!checked}>\r\n                        Login\r\n                    </Button>\r\n                    <br /><br />\r\n                    Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                </Form>\r\n                <div class=\"or-container\">\r\n                    <div></div>\r\n                    <p>or</p>\r\n                    <div></div>\r\n                </div>\r\n                {(loading || loadingViaGoogle) && <Loading />}\r\n                {(loading || loadingViaGoogle) && toast('Loading...')}\r\n                <button className='btn btn-primary mx-auto d-block px-5' onClick={handleSignInWithGoogle}>Sign in with Google</button>\r\n            </Container>\r\n            <ToastContainer />\r\n            <br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}