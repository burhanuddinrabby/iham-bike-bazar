{"ast":null,"code":"import _asyncToGenerator from\"G:/Assignment-10/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"G:/Assignment-10/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"G:\\\\Assignment-10\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from'react';import{Button,Container,Form}from'react-bootstrap';import{useSendPasswordResetEmail}from'react-firebase-hooks/auth';import{Link}from'react-router-dom';import auth from'../../../firebase.init';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import Loading from'../Loading/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ForgetPass=function ForgetPass(){var _useSendPasswordReset=useSendPasswordResetEmail(auth),_useSendPasswordReset2=_slicedToArray(_useSendPasswordReset,3),sendPasswordResetEmail=_useSendPasswordReset2[0],sending=_useSendPasswordReset2[1],error=_useSendPasswordReset2[2];var errorMessage;if(error){if(error.message==='Firebase: Error (auth/wrong-password).'){errorMessage='Wrong Password Please Try Again';}else if(error.message==='Firebase: Error (auth/user-not-found).'){errorMessage='User Not Found. Maybe invalid email or password';}else{errorMessage=error.message;}}var submitValue=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var form,email;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();form=e.target;email=form.email.value;_context.next=5;return sendPasswordResetEmail(email);case 5:if(!error){alert('Verification email sent');toast('Please check your email for reset password link');}case 6:case\"end\":return _context.stop();}}},_callee);}));return function submitValue(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Container,{className:\"mt-5\",children:[/*#__PURE__*/_jsxs(Form,{onSubmit:submitValue,className:\"w-75  mx-auto\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email address\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"email\",type:\"email\",placeholder:\"Enter email\",required:true})]}),/*#__PURE__*/_jsx(\"br\",{}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-danger\",children:[errorMessage,\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(Button,{className:\"d-block mx-auto px-5\",variant:\"primary\",type:\"submit\",children:\"Send Password Reset Email\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Sign Up\"})]}),sending&&/*#__PURE__*/_jsxs(_Fragment,{children:[sending&&toast('Sending Email...'),/*#__PURE__*/_jsx(Loading,{})]})]}),/*#__PURE__*/_jsx(ToastContainer,{})]});};export default ForgetPass;","map":{"version":3,"sources":["G:/Assignment-10/src/components/Login/ForgotPass/ForgetPass.js"],"names":["React","Button","Container","Form","useSendPasswordResetEmail","Link","auth","ToastContainer","toast","Loading","ForgetPass","sendPasswordResetEmail","sending","error","errorMessage","message","submitValue","e","preventDefault","form","target","email","value","alert"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,IAA5B,KAAwC,iBAAxC,CACA,OAASC,yBAAT,KAA0C,2BAA1C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,uCAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,0BAAiDN,yBAAyB,CAACE,IAAD,CAA1E,gEAAOK,sBAAP,2BAA+BC,OAA/B,2BAAwCC,KAAxC,2BACA,GAAIC,CAAAA,YAAJ,CACA,GAAID,KAAJ,CAAW,CACP,GAAIA,KAAK,CAACE,OAAN,GAAkB,wCAAtB,CAAgE,CAC5DD,YAAY,CAAG,iCAAf,CACH,CAFD,IAGK,IAAID,KAAK,CAACE,OAAN,GAAkB,wCAAtB,CAAgE,CACjED,YAAY,CAAG,iDAAf,CACH,CAFI,IAGA,CACDA,YAAY,CAAGD,KAAK,CAACE,OAArB,CACH,CACJ,CACD,GAAMC,CAAAA,WAAW,0FAAG,iBAAOC,CAAP,iIAChBA,CAAC,CAACC,cAAF,GACMC,IAFU,CAEHF,CAAC,CAACG,MAFC,CAGVC,KAHU,CAGFF,IAAI,CAACE,KAAL,CAAWC,KAHT,uBAIVX,CAAAA,sBAAsB,CAACU,KAAD,CAJZ,QAKhB,GAAI,CAACR,KAAL,CAAY,CACRU,KAAK,CAAC,yBAAD,CAAL,CACAf,KAAK,CAAC,iDAAD,CAAL,CACH,CARe,sDAAH,kBAAXQ,CAAAA,WAAW,4CAAjB,CAUA,mBACI,oCACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,MAAC,IAAD,EAAM,QAAQ,CAAEA,WAAhB,CAA6B,SAAS,CAAC,eAAvC,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,CAA6B,SAAS,CAAC,gBAAvC,wBACI,KAAC,IAAD,CAAM,KAAN,4BADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,OAAnB,CAA2B,IAAI,CAAC,OAAhC,CAAwC,WAAW,CAAC,aAApD,CAAkE,QAAQ,KAA1E,EAFJ,GADJ,cAKI,aALJ,CAMKH,KAAK,eAAI,WAAG,SAAS,CAAC,aAAb,WAA4BC,YAA5B,kBAA0C,aAA1C,GANd,cAOI,KAAC,MAAD,EAAQ,SAAS,CAAC,sBAAlB,CAAyC,OAAO,CAAC,SAAjD,CAA2D,IAAI,CAAC,QAAhE,uCAPJ,cAUI,aAVJ,cAUU,aAVV,wCAW2B,KAAC,IAAD,EAAM,EAAE,CAAC,SAAT,qBAX3B,GADJ,CAeQF,OAAO,eAAI,2BAAGA,OAAO,EAAIJ,KAAK,CAAC,kBAAD,CAAnB,cAAwC,KAAC,OAAD,IAAxC,GAfnB,GADJ,cAmBI,KAAC,cAAD,IAnBJ,GADJ,CAuBH,CA/CD,CAiDA,cAAeE,CAAAA,UAAf","sourcesContent":["import React from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { useSendPasswordResetEmail } from 'react-firebase-hooks/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../../../firebase.init';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst ForgetPass = () => {\r\n    const [sendPasswordResetEmail, sending, error] = useSendPasswordResetEmail(auth);\r\n    let errorMessage;\r\n    if (error) {\r\n        if (error.message === 'Firebase: Error (auth/wrong-password).') {\r\n            errorMessage = 'Wrong Password Please Try Again';\r\n        }\r\n        else if (error.message === 'Firebase: Error (auth/user-not-found).') {\r\n            errorMessage = 'User Not Found. Maybe invalid email or password';\r\n        }\r\n        else {\r\n            errorMessage = error.message;\r\n        }\r\n    }\r\n    const submitValue = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const email = form.email.value;\r\n        await sendPasswordResetEmail(email);\r\n        if (!error) {\r\n            alert('Verification email sent');\r\n            toast('Please check your email for reset password link');\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Container className='mt-5'>\r\n                <Form onSubmit={submitValue} className='w-75  mx-auto'>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name='email' type=\"email\" placeholder=\"Enter email\" required />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {error && <p className='text-danger'>{errorMessage} <br /></p>}\r\n                    <Button className='d-block mx-auto px-5' variant=\"primary\" type=\"submit\">\r\n                        Send Password Reset Email\r\n                    </Button>\r\n                    <br /><br />\r\n                    Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                </Form>\r\n                {\r\n                    sending && <>{sending && toast('Sending Email...')}<Loading /></>\r\n                }\r\n            </Container>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPass;"]},"metadata":{},"sourceType":"module"}