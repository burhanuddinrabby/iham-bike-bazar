{"ast":null,"code":"var _jsxFileName = \"G:\\\\Assignment-10\\\\src\\\\components\\\\ServiceInfo\\\\ServiceInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ServiceInfo = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  data.map(service => console.log(service.id == id)); // const service = data.find(service => service.id === id);\n  // console.log(service);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"this is service.name \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ServiceInfo, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ServiceInfo;\nexport default ServiceInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceInfo\");","map":{"version":3,"sources":["G:/Assignment-10/src/components/ServiceInfo/ServiceInfo.js"],"names":["React","useParams","ServiceInfo","data","id","map","service","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACAE,EAAAA,IAAI,CAACE,GAAL,CAASC,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACF,EAAR,IAAcA,EAA1B,CAApB,EAF8B,CAG9B;AACA;;AACA,sBACI;AAAA,wCAC0BA,EAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAVD;;GAAMF,W;UACaD,S;;;KADbC,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ServiceInfo = ({ data }) => {\r\n    const { id } = useParams();\r\n    data.map(service => console.log(service.id == id));\r\n    // const service = data.find(service => service.id === id);\r\n    // console.log(service);\r\n    return (\r\n        <div>\r\n            this is service.name {id}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ServiceInfo;"]},"metadata":{},"sourceType":"module"}