{"ast":null,"code":"var _jsxFileName = \"G:\\\\Assignment-10\\\\src\\\\components\\\\Login\\\\ForgotPass\\\\ForgetPass.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Container, Form } from 'react-bootstrap';\nimport { useSendPasswordResetEmail } from 'react-firebase-hooks/auth';\nimport { Link } from 'react-router-dom';\nimport auth from '../../../firebase.init';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loading from '../Loading/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForgetPass = () => {\n  _s();\n\n  const [sendPasswordResetEmail, sending, error] = useSendPasswordResetEmail(auth);\n  let errorMessage;\n\n  if (error) {\n    if (error.message === 'Firebase: Error (auth/wrong-password).') {\n      errorMessage = 'Wrong Password Please Try Again';\n    } else if (error.message === 'Firebase: Error (auth/user-not-found).') {\n      errorMessage = 'User Not Found. Maybe invalid email or password';\n    } else {\n      errorMessage = error.message;\n    }\n  }\n\n  const submitValue = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const email = form.email.value;\n    await sendPasswordResetEmail(email);\n    toast('Please check your email for reset password link');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitValue,\n        className: \"w-75  mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [errorMessage, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"d-block mx-auto px-5\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Send Password Reset Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 27\n        }, this), \"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), sending && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [toast('Sending Email...'), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgetPass, \"wYtDvyBUgmeNgmYmmnTCZlZqet4=\", false, function () {\n  return [useSendPasswordResetEmail];\n});\n\n_c = ForgetPass;\nexport default ForgetPass;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPass\");","map":{"version":3,"sources":["G:/Assignment-10/src/components/Login/ForgotPass/ForgetPass.js"],"names":["React","Button","Container","Form","useSendPasswordResetEmail","Link","auth","ToastContainer","toast","Loading","ForgetPass","sendPasswordResetEmail","sending","error","errorMessage","message","submitValue","e","preventDefault","form","target","email","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { useSendPasswordResetEmail } from 'react-firebase-hooks/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../../../firebase.init';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst ForgetPass = () => {\r\n    const [sendPasswordResetEmail, sending, error] = useSendPasswordResetEmail(auth);\r\n    let errorMessage;\r\n    if (error) {\r\n        if (error.message === 'Firebase: Error (auth/wrong-password).') {\r\n            errorMessage = 'Wrong Password Please Try Again';\r\n        }\r\n        else if (error.message === 'Firebase: Error (auth/user-not-found).') {\r\n            errorMessage = 'User Not Found. Maybe invalid email or password';\r\n        }\r\n        else {\r\n            errorMessage = error.message;\r\n        }\r\n    }\r\n    const submitValue = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const email = form.email.value;\r\n        await sendPasswordResetEmail(email);\r\n        toast('Please check your email for reset password link');\r\n    }\r\n    return (\r\n        <div>\r\n            <Container className='mt-5'>\r\n                <Form onSubmit={submitValue} className='w-75  mx-auto'>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control name='email' type=\"email\" placeholder=\"Enter email\" required />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {error && <p className='text-danger'>{errorMessage} <br /></p>}\r\n                    <Button className='d-block mx-auto px-5' variant=\"primary\" type=\"submit\">\r\n                        Send Password Reset Email\r\n                    </Button>\r\n                    <br /><br />\r\n                    Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n                </Form>\r\n                {\r\n                    sending && <>{toast('Sending Email...')}<Loading></Loading></>\r\n                }\r\n            </Container>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPass;"]},"metadata":{},"sourceType":"module"}